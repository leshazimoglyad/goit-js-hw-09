{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SACA,MAAMC,EAAO,CACXC,WAAYC,SAASC,cAAc,uBACnCC,UAAWF,SAASC,cAAc,sBAClCE,YAAaH,SAASC,cAAc,wBACpCG,UAAWJ,SAASC,cAAc,2BAE9BF,WAAEM,EAAUF,YAAEG,EAAWJ,UAAEK,EAASH,UAAEI,GAAcV,EAG1D,SAASW,EAAcC,EAAaC,GAClC,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KACvBL,EACFI,EAAQN,EAAaC,GAErBM,EAAOP,EAAaC,EAAW,G,CARrCH,EAAUU,iBAAiB,SAa3B,SAAqBC,GACnB,IAAIR,EAAaS,OAAOf,EAAWgB,OAC/BC,EAAYF,OAAOb,EAAUc,OAC7BX,EAAcU,OAAOd,EAAYe,OACrCE,QAAQC,IAAIb,EAAYW,EAAWZ,GACnCS,EAAIM,iBACJ,IAAK,IAAIC,EAAW,EAAGA,GAAYhB,EAAagB,GAAY,EAAG,CAC7D,IAAIC,EAASD,EACTE,EAAWjB,EACfkB,YACE,IACEpB,EAAciB,EAAUf,GACrBmB,MAAK,EAACJ,SAAEA,EAAQf,WAAEA,MACjBoB,EAAAnC,GAASoC,OAAOC,KACd,uBAAqBN,QAAeC,OAAc,IAGrDM,OAAM,EAACR,SAAEA,EAAQf,WAAEA,MAClBoB,EAAAnC,GAASoC,OAAOG,QACd,uBAAqBR,QAAaC,OAAc,KAGxDjB,GAEFA,GAAcW,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst refs = {\n  inputDelay: document.querySelector(`input[name=\"delay\"]`),\n  inputStep: document.querySelector(`input[name=\"step\"]`),\n  inputAmount: document.querySelector(`input[name=\"amount\"]`),\n  submitBtn: document.querySelector(`button[type=\"submit\"]`),\n};\nconst { inputDelay, inputAmount, inputStep, submitBtn } = refs;\nsubmitBtn.addEventListener('click', onSubmitBtn);\n\nfunction createPromise(amountValue, delayValue) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      resolve(amountValue, delayValue);\n    } else {\n      reject(amountValue, delayValue);\n    }\n  });\n}\n// sff\nfunction onSubmitBtn(evt) {\n  let delayValue = Number(inputDelay.value);\n  let stepValue = Number(inputStep.value);\n  let amountValue = Number(inputAmount.value);\n  console.log(delayValue, stepValue, amountValue);\n  evt.preventDefault();\n  for (let position = 1; position <= amountValue; position += 1) {\n    let curPos = position;\n    let curDelay = delayValue;\n    setTimeout(\n      () =>\n        createPromise(position, delayValue)\n          .then(({ position, delayValue }) => {\n            Notiflix.Notify.info(\n              `✅ Fulfilled promise ${curPos} in ${curDelay} ms`\n            );\n          })\n          .catch(({ position, delayValue }) => {\n            Notiflix.Notify.failure(\n              `✅ Fulfilled promise ${curPos} in ${curDelay} ms`\n            );\n          }),\n      delayValue\n    );\n    delayValue += stepValue;\n  }\n}"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$refs","inputDelay","document","querySelector","inputStep","inputAmount","submitBtn","$47d4ff9957288465$var$inputDelay","$47d4ff9957288465$var$inputAmount","$47d4ff9957288465$var$inputStep","$47d4ff9957288465$var$submitBtn","$47d4ff9957288465$var$createPromise","amountValue","delayValue","shouldResolve","Math","random","Promise","resolve","reject","addEventListener","evt","Number","value","stepValue","console","log","preventDefault","position","curPos","curDelay","setTimeout","then","$parcel$interopDefault","Notify","info","catch","failure"],"version":3,"file":"03-promises.cd5e3d41.js.map"}